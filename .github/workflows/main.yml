name: Visa Appointment Check

on:
  # schedule:
  # - cron: "*/5 * * * *" # Runs every 5 minutes
  workflow_dispatch: # Allows manual trigger

jobs:
  check-appointment:
    runs-on: ubuntu-latest
    # environment: Development
    env:
      URL: ${{ secrets.URL }}
      EMAIL: ${{ secrets.EMAIL }}
      PASSWORD: ${{ secrets.PASSWORD }}
      SCHEDULE_ID: ${{ secrets.SCHEDULE_ID }}
      FACILITY_ID: ${{ secrets.FACILITY_ID }}

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.12"

      - name: Install Chrome
        run: |
          wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
          sudo apt install ./google-chrome-stable_current_amd64.deb
          google-chrome --version  # Log Chrome version
          which google-chrome      # Log Chrome location

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Create env file
        env:
          URL: ${{ secrets.URL }}
          EMAIL: ${{ secrets.EMAIL }}
          PASSWORD: ${{ secrets.PASSWORD }}
          SCHEDULE_ID: ${{ secrets.SCHEDULE_ID }}
          FACILITY_ID: ${{ secrets.FACILITY_ID }}
        run: |
          echo "URL=$URL" >> .env
          echo "email=$EMAIL" >> .env
          echo "password=$PASSWORD" >> .env
          echo "SCHEDULE_ID=$SCHEDULE_ID" >> .env
          echo "FACILITY_ID=$FACILITY_ID" >> .env
          # Verify env file creation and content (will mask sensitive data)
          echo "Checking if .env file exists:"
          test -f .env && echo "✓ .env file created" || echo "✗ .env file missing"
          echo "Checking .env file contents (secrets will be masked):"
          cat .env | sed 's/=.*/=****/'

      - name: Debug Environment
        run: |
          echo "Checking if environment variables are set:"
          printenv | grep -E "URL|email|password|SCHEDULE_ID|FACILITY_ID" | sed 's/=.*/=****/'

      - name: Run visa check script
        run: python visa.py
      - name: Upload logs
        if: always() # This ensures logs are uploaded even if the script fails
        uses: actions/upload-artifact@v3
        with:
          name: visa-check-logs
          path: logs/*.log # Adjust this path to match your log file location
